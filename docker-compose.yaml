#############################################################################################################
# Start your application services by typing at the Docker CLI:
#     ~$> docker-compose -f <"a unique name">.docker-compose.yml up -d
# Shutdown services with the Docker CLI command: 
#     ~$> docker-compose -f  <"a unique name">.docker-compose.yml down --remove-orphans
#     The "--remove-orphans" flag is used to remove any child container instances that may have been created
#############################################################################################################
#
version: "3.7"
services:  
########################################## MYSQL Database #########################################
  db:
    # https://hub.docker.com/r/mysql/mysql-server
    # https://hub.docker.com/r/arm64v8/mariadb
    image: mysql:8.0.23   # Enter your image <Name>:<Tag>
    init: true                            
    container_name: db
    ########################### Define you ENVIRONMENT Variables ##################################
    environment:
      # Define history file
      MYSQL_HISTFILE: '/var/log/.mysql_history'
      # MySQL allow empty password variable
      #MYSQL_ALLOW_EMPTY_PASSWORD: 1
      # Name of the database
      MYSQL_DATABASE: 'lamp'
      # MYSQL_HOST: which is known to cause issues when used with this image; DO NOT INCLUDE
      #MYSQL_HOST: '<hostname>'
      # Provide a username for your MySQL instance
      MYSQL_USER: 'alena'
      # Provide a password for your MySQL instance
      MYSQL_PASSWORD: 'developer'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'developer'
    ################################ Define you Volume Bind Mounts ################################
    volumes: #- <HOST>:<CONTAINER>
      - ./mysql:/var/lib/mysql           # Linux/Mac OS: [REQUIRED] MySQL Data directory
      - ./mysql_logs:/var/log        # Linux/Mac OS: [OPTIONAL] MySQL Log directory
    # Uncomment your restart policy
    #restart: "no"                        # [OPTIONAL] On failure do not restart
    #restart: always                      # [OPTIONAL] Always restart, even after system shutdown
    restart: on-failure                   # [OPTIONAL] Best the restart on failure
    #restart: unless-stopped              # [OPTIONAL]  
    ##################################### Define and Expose Your Ports ############################
    # Expose AND Define <INTERNAL>:<EXTERNAL> container ports to support your services
    expose:
      - 3306
    ports:  # <host>:<container>
      - 3306:3306
      - 33060:33060
      - 33061:33061
    ########################### Define Network Protocols ##########################################
    networks:
      lamp-network:
        ipv4_address: 172.16.238.9    # IPv4 Default Gateway  172.16.238.1
        #ipv6_address: 2001:3984:3989::9   # IPv6 Default Gateway
    ####################### Run Commands after the container starts ############################### 
    #command: ["--default-authentication-plugin=mysql_native_password"]
    #command: ["mysqld --verbose --help"]
########################## Adminer : Standalone DBMS Formally PHPMyAdmin ##########################
  adminer:
    # https://hub.docker.com/r/arm64v8/adminer/
    # http://docs.docker.oeynet.com/samples/library/adminer/
    #  https://github.com/vrana/adminer/tree/master/plugins
    image:  adminer:standalone
    container_name: adminer    
    environment:
      ADMINER_DEFAULT_SERVER: db # The Name DB service defined above.
    #restart: "no"
    #restart: always
    restart: on-failure
    #restart: unless-stopped
    ports: # <host>:<container>
      - 30002:8080
    networks:
      lamp-network:
        ipv4_address: 172.16.238.8      # default gateway  172.16.238.1
    links: 
      - db
    depends_on:
      - db
    #command: [ "apt-get install -y tcl-tls tcl8.6-tdbc-mysql mysql-common" ]
####################################### PHP #######################################################   
  php:
    # https://hub.docker.com/r/arm64v8/php/
    image: php:8.0.11-apache
    container_name: www
    stdin_open: true # docker run -i
    tty: true   # docker run -t
    init: true
    environment:
      APACHE_RUN_DIR: /var/www/html
      # APACHE_LOG_DIR: /var/log
      # PHP_LOG_DIR: /var/log
      # error_log: /var/log
      #docref_root: /var/www/manual
    volumes:  # note volume format in Windows OS format; change to linux/mac os if applicable
      # Format: - <host directory>:<container directory>
      # Website directory volume
      - ./www:/var/www/html
      # PHP.ini configuration file location
      #- ./assets/php:/usr/local/etc/php
      # MySQL SSL Location
      #- ./assets/mysql-ssl:/etc/ssl/mysql/
      # Log director
      #- ./logs/www-log:/var/log
      # Manual Pages
      #- ./www/assets/manual:/var/www/html/assets/manual
      # Path to extension directory
      #- ./php-ext:/usr/local/etc/php/php-ext
    #*** Restart Policy ***#  
    #restart: "no"
    #restart: always
    restart: on-failure
    #restart: unless-stopped
    working_dir: /var/www/html
    expose:
      - 80
    ports: # <host>:<container>
      - 30001:80
    networks:
      lamp-network:
        ipv4_address: 172.16.238.10     # default gateway  172.16.238.1
    links: 
      - db
    depends_on:
      - db  
    # command: ["docker-php-ext-install mysqli","docker-php-ext-install ",
    # "pecl install memcached && docker-php-ext-enable memcached"]
################################# volumes ################################
# since we are using direct access to host directories, we do not need to 
# declare any virtual volume mounts
################################ NETWORK #################################  
networks:
  lamp-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/28
          #gateway: 172.16.238.1
